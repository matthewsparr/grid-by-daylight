Version: "0.1"
Environment:
  Name: Dead by Daylight
  Description: Robots start randomly as "tagged" or not, robots can "tag" other robots. Any robot that is "tagged" 3 times dies.
  Observers:
    Block2D:
      TileSize: 36
    Sprite2D:
      TileSize: 36
      BackgroundTile: floor1-1.png
    Isometric:
      TileSize: [ 64, 64 ]
      BackgroundTile: plain.png
      IsoTileHeight: 35
      IsoTileDepth: 2
    Vector:
      IncludePlayerId: true
      IncludeVariables: true
      IncludeRotation: true
  Variables:
    - Name: downed_survivors
      InitialValue: 0
    - Name: initial_generator_count
      InitialValue: 0
    - Name: repaired_generator_count
      InitialValue: 0
    - Name: generators_repaired
      InitialValue: 0
    - Name: exit_gate_opened
      InitialValue: 0
    - Name: escaped_survivors_count
      InitialValue: 0
    - Name: survivors_left
      InitialValue: 4
  Player:
    Count: 5
    Observer:
      RotateWithAvatar: false
      TrackAvatar: true
      Height: 10
      Width: 10
      OffsetX: 0
      OffsetY: 0
    AvatarObject: player
  Termination:
    Win:
      - Conditions:
          - eq: [ escaped_survivors_count, 4 ]
        Reward: 10 # -10 for a loss
        OpposingReward: -10 # as the agent didnt lose
    Lose:
      - Conditions:
          - eq: [ downed_survivors, survivors_left ] ## all survivors
        Reward: -10 # -10 for a loss
        OpposingReward: 10 # as the agent didnt lose
  Levels:
    - |
      W   W   W   W   W   W
      W   p1  .   .   p2  W
      W   .   .   .   .   W
      W   .   .   .   .   W
      W   p4  .   .   p3  W
      W   W   W   W   W   W
    - |
      W   W   W   e   W  W  W
      W   p1  .   .   .  p2 W
      W   .   .   .   .  .  W
      W   .   .   g   .  .  W
      W   p4  .   p5  .  p3 W
      W   W   W   W   W  W  W
    - |
      W   W   W   W   e   W   W   W   W
      W   .   .   .   p1  .   .   .   W
      W   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   W
      W   p2  .   .   g   .   .   p5  W
      W   .   .   .   .   .   .   .   W
      W   .   g   .   .   .   g   .   W
      W   p3  .   .   .   .   .   p4  W
      W   W   W   W   W   W   W   W   W
    - |
      W   W   W   W   W   W   W   W   W   W   e   W   W   W   W   W   W   W   W   W   W   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   .   .   p1  .   .   .   .   .   .   .   .   .   .   W
      W   .   p5  .   .   m   .   .   .   .   .   .   .   .   .   m   .   .   p2  .   .   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   W   W   W   W   W   W   .   .   .   .   .   .   .   W
      W   .   .   m   .   .   .   .   .   .   .   .   .   .   .   .   .   .   m   .   .   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   W   .   .   .   .   .   .   W   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   W   .   .   g   .   .   .   W   .   .   .   .   .   .   W
      W   .   .   g   .   .   .   W   .   .   .   .   .   .   W   .   .   .   g   .   .   W
      W   .   .   .   .   .   .   W   .   .   .   .   .   .   W   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   m   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   W   W   W   W   W   W   .   .   .   .   m   .   .   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   p3  .   .   .   .   .   .   .   .   .   .   .   .   .   .   p4  .   .   W
      W   .   .   .   .   .   g   .   .   .   m   .   .   .   .   g   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W
    - |
      W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W
      W   .   .   .   .   m   .   .   .   .   .   .   .   .   .   .   m   .   .   .   .   W
      W   .   .   .   .   m   .   .   .   .   .   .   .   .   .   .   m   .   .   .   .   W
      W   .   .   p1  .   m   .   .   .   .   .   .   .   .   .   .   m   .   p2  .   .   W
      W   .   .   .   .   m   .   .   .   .   .   .   .   .   .   .   m   .   .   .   .   W
      W   .   .   .   .   m   .   .   .   .   .   .   .   .   .   .   m   .   .   .   .   W
      W   m   m   m   m   m   .   .   W   W   W   W   W   W   .   .   m   m   m   m   m   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   W   .   .   .   .   .   .   W   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   W   .   .   .   .   .   .   W   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   W   .   .   .   .   .   .   W   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   W   .   .   .   .   .   .   W   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   W
      W   m   m   m   m   m   .   .   W   W   W   W   W   W   .   .   m   m   m   m   m   W
      W   .   .   .   .   m   .   .   .   .   .   .   .   .   .   .   m   .   .   .   .   W
      W   .   .   .   .   m   .   .   .   .   .   .   .   .   .   .   m   .   .   .   .   W
      W   .   .   p3  .   m   .   .   .   .   .   .   .   .   .   .   m   .   p4  .   .   W
      W   .   .   .   .   m   .   .   .   .   .   .   .   .   .   .   m   .   .   .   .   W
      W   .   .   .   .   m   .   .   .   .   .   .   .   .   .   .   m   .   .   .   .   W
      W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W   W

Actions:

  # p1 is set as the killer at the start of the game
  - Name: initialize_killer
    Behaviours:
      - Src:
          Object: player
          Preconditions:
            - eq: [ src._playerId, 1 ]
          Commands:
            - set_tile: 1
            - set: [ is_killer, 1 ]
            - set: [ traps_available, 2 ]
        Dst:
          Object: player

  # both killer and survivor
  - Name: move
    InputMapping:
      Inputs:
        1:
          Description: Move left
          OrientationVector: [ -1, 0 ]
          VectorToDest: [ -1, 0 ]
        2:
          Description: Move up
          OrientationVector: [ 0, -1 ]
          VectorToDest: [ 0, -1 ]
        3:
          Description: Move right
          OrientationVector: [ 1, 0 ]
          VectorToDest: [ 1, 0 ]
        4:
          Description: Move down
          VectorToDest: [ 0, 1 ]
          OrientationVector: [ 0, 1 ]
      Relative: false
    Behaviours:
#      - Src:
#          Object: player
#          Commands:
#            - rot: _dir
#        Dst:
#          Object: player
      - Src:
          Object: [ player, moveable_wall ]
          Preconditions:
            - eq: [ src.downed, 0 ]
            - eq: [ src.cooldown, 0 ]
          Commands:
            - mov: _dest
#            - rot: _dir
        Dst:
          Object: _empty

      - Src:
          Object: player
          Commands:
            - mov: _dest
        Dst:
          Object: moveable_wall
          Commands:
            - cascade: _dest

      - Src:
          Object: player
          Preconditions:
            - eq: [ src.is_killer, 0 ]
          Commands:
            - eq:
                Arguments: [ dst.is_armed, 1 ]
                Commands:
                  - set_tile: 3
                  - set: [ health, 0 ]
                  - incr: downed_survivors
                  - set: [ downed, 1 ]
            - mov: _dest
        Dst:
          Object: trap
          Commands:
            - eq:
                Arguments: [ is_armed, 1 ]
                Commands:
                  - set: [ is_armed, 0 ]
                  - set_tile: 1

      - Src:
          Object: player
          Preconditions:
            - eq: [ src.is_killer, 0 ]
            - eq: [ dst.is_open, 1 ]
          Commands:
            - set: [ src.is_escaped, 1 ]
            - incr: escaped_survivors_count
            - reward: 5
            - remove: true
            - decr: survivors_left
        Dst:
          Object: exit_gate

  # killer only
  # the killer attacks a nearby survivor and reduces their health state by one
  - Name: attack
    Behaviours:
      - Src:
          Object: player
          Preconditions:
            - eq: [ src.is_killer, 1 ]
            - gt: [ dst.health, 0 ]
            - eq: [ src.cooldown, 0 ]
          Commands:
            - reward: 1
            - set: [ src.cooldown, 1 ]
        Dst:
          Object: player
          Commands:
            - set_tile: 2
            - decr: health
            - reward: -1
            - eq:
                Arguments: [ health, 0 ]
                Commands:
                  - set_tile: 3
                  - incr: downed_survivors
                  - set: [ downed, 1 ]
                  - reward: -5
  # killer only
  - Name: recharge
    Behaviours:
      - Src:
          Object: player
          Preconditions:
            - eq: [ src.is_killer, 1 ]
            - gt: [ src.cooldown, 0 ]
          Commands:
            - decr: src.cooldown
        Dst:
          Object: player

  # killer only
  - Name: damage_generator
    Behaviours:
      - Src:
          Object: player
          Preconditions:
            - eq: [ src.is_killer, 1 ]
            - eq: [ dst.is_repaired, 0 ]
            - eq: [ dst.is_damaged, 0 ]
            - gt: [ dst.progress, 0 ]
          Commands:
            - reward: 0.25
        Dst:
          Object: generator
          Commands:
            - sub: [ progress, 10 ]
            - set: [ is_damaged, 1 ]

  # killer only
  - Name: place_trap
    Behaviours:
      - Src:
          Object: player
          Preconditions:
            - eq: [ src.is_killer, 1 ]
            - gt: [ src.traps_available, 0 ]
          Commands:
            - decr: src.traps_available
            - spawn: trap
        Dst:
          Object: _empty


  # killer only
  - Name: pick_up_trap
    Behaviours:
      - Src:
          Object: player
          Preconditions:
              - eq: [ src.is_killer, 1 ]
          Commands:
            - incr: src.traps_available
        Dst:
          Object: trap
          Commands:
            - remove: true

  # survivor only
  - Name: heal
    Behaviours:
      - Src:
          Object: player
          Preconditions:
            - eq: [ src.is_killer, 0 ]
            - eq: [ src.downed, 0 ]
            - eq: [ dst.is_killer, 0 ]
            - lt: [ dst.health, 2 ]
          Commands:
            - reward: 0.25
        Dst:
          Object: player
          Commands:
            - eq:
                Arguments: [ health, 1 ]
                Commands:
                  - set_tile: 0
                  - incr: health
            - eq:
                Arguments: [ health, 0 ]
                Commands:
                  - set_tile: 2
                  - set: [ downed, 0 ]
                  - incr: health
                  - decr: downed_survivors


  # survivor only
  - Name: repair_generator
    Behaviours:
      - Src:
          Object: player
          Preconditions:
            - eq: [ src.is_killer, 0 ]
            - eq: [ src.downed, 0 ]
            - eq: [ dst.is_repaired, 0 ]
          Commands:
            - reward: 0.05
        Dst:
          Object: generator
          Commands:
            - add: [ progress, 25 ]
            - set: [ is_damaged, 0 ]
            - gte:
                Arguments: [ progress, 100 ]
                Commands:
                  - set: [ is_repaired, 1 ]
                  - set_tile: 1
                  - incr: repaired_generator_count
            - eq:
                Arguments: [ repaired_generator_count, initial_generator_count ]
                Commands:
                  - set: [ generators_repaired, 1 ]

  - Name: disarm_trap
    Behaviours:
      - Src:
          Object: player
          Preconditions:
            - eq: [ src.is_killer, 0 ]
            - eq: [ dst.is_armed, 1 ]
        Dst:
          Object: trap
          Commands:
            - set: [ is_armed, 0 ]
            - set_tile: 1

  - Name: open_exit_gate
    Behaviours:
      - Src:
          Object: player
          Preconditions:
            - eq: [ src.is_killer, 0 ]
            - eq: [ dst.is_open, 0 ]
            - eq: [ dst.is_powered, 1 ]
          Commands:
            - reward: 0.5
        Dst:
          Object: exit_gate
          Commands:
            - add: [ progress, 25 ]
            - gte:
                Arguments: [ progress, 100 ]
                Commands:
                  - set_tile: 2
                  - set: [ is_open, 1 ]
                  - set: [ exit_gate_opened, 1 ]

  - Name: regress_generator
    InputMapping:
      Internal: true
      Inputs:
        1:
          Description: "Slowly reduce progress on generator when not being repaired"
    Behaviours:
      - Src:
          Object: generator
          Preconditions:
            - eq: [ src.is_repaired, 0 ]
            - eq: [ src.is_damaged, 1 ]
            - gte: [ src.progress, 1 ]
          Commands:
            - sub: [ progress, 1 ]
            - exec:
                Action: regress_generator
                ActionId: 1
                Delay: 1
        Dst:
          Object: generator

  - Name: count_generators
    InputMapping:
      Internal: true
      Inputs:
        1:
          Description: "Count the total number of generators"
    Behaviours:
      - Src:
          Object: generator
          Commands:
            - incr: initial_generator_count
        Dst:
          Object: generator

  - Name: check_generator_progress
    InputMapping:
      Internal: true
      Inputs:
        1:
          Description: "Check if all generators completed so that exit gate can be powered."
    Behaviours:
      - Src:
          Object: exit_gate
          Preconditions:
            - eq: [ src.is_powered, 0 ]
          Commands:
            - eq:
                Arguments: [ generators_repaired, 1 ]
                Commands:
                  - set_tile: 1
                  - set: [ dst.is_powered, 1 ]
            - exec:
                Action: check_generator_progress
                ActionId: 1
                Delay: 1
        Dst:
          Object: exit_gate

Objects:
  - Name: player
    MapCharacter: p
    InitialActions:
      - Action: initialize_killer
    Variables:
      - Name: is_killer
        InitialValue: 0
      - Name: cooldown
        InitialValue: 0
      - Name: health
        InitialValue: 2
      - Name: downed
        InitialValue: 0
      - Name: is_escaped
        InitialValue: 0
      - Name: traps_available
        InitialValue: 0
    Observers:
      Sprite2D:
        - Image: girl1.png
        - Image: butcher1.png
        - Image: girl5.png
        - Image: girl_downed.png
      Block2D:
        - Shape: triangle
          Color: [ 0.9, 0.5, 0.5 ]
          Scale: 1.0
        - Shape: triangle
          Color: [ 0.2, 0.2, 0.9 ]
          Scale: 0.5
        - Shape: triangle
          Color: [ 0.9, 0.2, 0.2 ]
          Scale: 1.0
        - Shape: triangle
          Color: [ 0.9, 0.0, 0.0 ]
          Scale: 1.0
      Isometric:
        - Image: girl1.png
        - Image: butcher1.png
        - Image: girl5.png
        - Image: girl_downed.png

  - Name: generator
    MapCharacter: g
    InitialActions:
      - Action: count_generators
        ActionId: 1
      - Action: regress_generator
        ActionId: 1
        Delay: 1
    Variables:
      - Name: progress
        InitialValue: 0
      - Name: is_repaired
        InitialValue: 0
      - Name: is_damaged
        InitialValue: 0
    Observers:
      Sprite2D:
        - Image: submarine.png
        - Image: submarine_repaired.png
      Block2D:
        - Color: [ 0.9, 0.75, 0.9 ]
          Shape: square
      Isometric:
        - Image: submarine.png
        - Image: submarine_repaired.png

  - Name: exit_gate
    MapCharacter: e
    InitialActions:
      - Action: check_generator_progress
        ActionId: 1
        Delay: 1
    Variables:
      - Name: progress
        InitialValue: 0
      - Name: is_open
        InitialValue: 0
      - Name: is_powered
        InitialValue: 0
    Observers:
      Sprite2D:
        - Image: jaildoor1.png
        - Image: doorclosed1.png
        - Image: dooropen1.png
      Block2D:
        - Color: [ 0.1, 0.1, 0.8 ]
          Shape: square
      Isometric:
        - Image: jaildoor1.png
        - Image: doorclosed1.png
        - Image: dooropen1.png

  - Name: trap
    Z: 2
    MapCharacter: x
    Variables:
      - Name: is_armed
        InitialValue: 1
      - Name: survivor_caught
        InitialValue: 0

    Observers:
      Sprite2D:
        - Image: bear_trap_armed.png
        - Image: bear_trap_disarmed.png
      Block2D:
        - Color: [ 0.8, 0.8, 0.8 ]
          Shape: circle
      Isometric:
        - Image: bear_trap_armed.png
        - Image: bear_trap_disarmed.png

  - Name: moveable_wall
    MapCharacter: m
    Variables:
      - Name: downed
        InitialValue: 0
      - Name: cooldown
        InitialValue: 0
    Observers:
      Sprite2D:
        - Image: wall4-0.png
      Block2D:
        - Color: [ 0.8, 0.8, 0.8 ]
          Shape: square
      Isometric:
        - Image: wall4-0.png


  - Name: fixed_wall
    MapCharacter: W
    Observers:
      Sprite2D:
        - TilingMode: WALL_16
          Image:
            - wall2-0.png
            - wall2-1.png
            - wall2-2.png
            - wall2-3.png
            - wall2-4.png
            - wall2-5.png
            - wall2-6.png
            - wall2-7.png
            - wall2-8.png
            - wall2-9.png
            - wall2-10.png
            - wall2-11.png
            - wall2-12.png
            - wall2-13.png
            - wall2-14.png
            - wall2-15.png
      Block2D:
        - Color: [ 0.5, 0.5, 0.5 ]
          Shape: square
      Isometric:
        - Image: plain.png
